// A SCSS starter to create harmonic color palettes
// https://github.com/alectro/SCSScolor/

@import "SCSScolor/setup";

// Muted colors
$base-color: hsla(210, 33, 75, 1);
@import "SCSScolor/colorcalc";
$cComplementary:        complement($base-color);
$cSplitComplementary-1: adjust-hue($base-color, $SplitComplementary);
$cSplitComplementary-2: adjust-hue($base-color, ($SplitComplementary * -1));
$cAnalogous-1:          adjust-hue($base-color, $Analogous);
$cAnalogous-2:          adjust-hue($base-color, ($Analogous * -1));
$cTriadic-1:            adjust-hue($base-color, $Triadic);
$cTriadic-2:            adjust-hue($base-color, (-$Triadic * -1));
$cTetradic-1:           adjust-hue($base-color, $TetradicSquare);
$cTetradic-2:           adjust-hue($base-color, ($TetradicSquare * -1));
$cTetradic-3:           adjust-hue($base-color, (($TetradicSquare*2) * -1));
$cTetradicRectangle-1:  adjust-hue($base-color, $TetradicRectangle);
$cTetradicRectangle-2:  adjust-hue($base-color, ($TetradicRectangle * -1));
$cTetradicRectangle-3:  adjust-hue($base-color, (($TetradicRectangle*2) * -1));
$cTint-10:              mix(White, $base-color, 10%);
$cTint-20:              mix(White, $base-color, 20%);
$cTint-30:              mix(White, $base-color, 30%);
$cTint-40:              mix(White, $base-color, 40%);
$cTint-50:              mix(White, $base-color, 50%);
$cTint-60:              mix(White, $base-color, 60%);
$cTint-70:              mix(White, $base-color, 70%);
$cTint-80:              mix(White, $base-color, 80%);
$cTint-90:              mix(White, $base-color, 90%);
$cShade-10:             mix(Black, $base-color, 10%);
$cShade-20:             mix(Black, $base-color, 20%);
$cShade-30:             mix(Black, $base-color, 30%);
$cShade-40:             mix(Black, $base-color, 40%);
$cShade-50:             mix(Black, $base-color, 50%);
$cShade-60:             mix(Black, $base-color, 60%);
$cShade-70:             mix(Black, $base-color, 70%);
$cShade-80:             mix(Black, $base-color, 80%);
$cShade-90:             mix(Black, $base-color, 90%);

// Muted colors
$base-color: hsla(210, 33, 75, 1);
@import "SCSScolor/colorcalc";
$cComplementary:        complement($base-color);
$cSplitComplementary-1: adjust-hue($base-color, $SplitComplementary);
$cSplitComplementary-2: adjust-hue($base-color, ($SplitComplementary * -1));
$cAnalogous-1:          adjust-hue($base-color, $Analogous);
$cAnalogous-2:          adjust-hue($base-color, ($Analogous * -1));
$cTriadic-1:            adjust-hue($base-color, $Triadic);
$cTriadic-2:            adjust-hue($base-color, (-$Triadic * -1));
$cTetradic-1:           adjust-hue($base-color, $TetradicSquare);
$cTetradic-2:           adjust-hue($base-color, ($TetradicSquare * -1));
$cTetradic-3:           adjust-hue($base-color, (($TetradicSquare*2) * -1));
$cTetradicRectangle-1:  adjust-hue($base-color, $TetradicRectangle);
$cTetradicRectangle-2:  adjust-hue($base-color, ($TetradicRectangle * -1));
$cTetradicRectangle-3:  adjust-hue($base-color, (($TetradicRectangle*2) * -1));
$cTint-10:              mix(White, $base-color, 10%);
$cTint-20:              mix(White, $base-color, 20%);
$cTint-30:              mix(White, $base-color, 30%);
$cTint-40:              mix(White, $base-color, 40%);
$cTint-50:              mix(White, $base-color, 50%);
$cTint-60:              mix(White, $base-color, 60%);
$cTint-70:              mix(White, $base-color, 70%);
$cTint-80:              mix(White, $base-color, 80%);
$cTint-90:              mix(White, $base-color, 90%);
$cShade-10:             mix(Black, $base-color, 10%);
$cShade-20:             mix(Black, $base-color, 20%);
$cShade-30:             mix(Black, $base-color, 30%);
$cShade-40:             mix(Black, $base-color, 40%);
$cShade-50:             mix(Black, $base-color, 50%);
$cShade-60:             mix(Black, $base-color, 60%);
$cShade-70:             mix(Black, $base-color, 70%);
$cShade-80:             mix(Black, $base-color, 80%);
$cShade-90:             mix(Black, $base-color, 90%);
